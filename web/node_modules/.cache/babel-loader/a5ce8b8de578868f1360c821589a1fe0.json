{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rapha\\\\Documents\\\\nlw\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport Dropzone from '../../components/Dropzone';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [selectedFile, setSelectedFile] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = new FormData();\n    data.append('name', name);\n    data.append('email', email);\n    data.append('whatsapp', whatsapp);\n    data.append('uf', uf);\n    data.append('city', city);\n    data.append('latitude', latitude);\n    data.append('longitude', longitude);\n    data.append('items', items);\n    await api.post('points', data);\n    alert('Ponto de coleta criado!');\n    history.push('/');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), \"Voltar para Home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onFileUploaded: setSelectedFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Dados\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onclick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Itens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"Selecione um ou mais itens de coleta\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/Users/rapha/Documents/nlw/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","axios","api","Dropzone","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","initialPosition","setInitialPosition","formData","setFormData","name","email","whatsapp","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","selectedFile","setSelectedFile","history","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","FormData","append","post","alert","push","logo","includes","image_url","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAmE,OAAnE;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,QAAuC,eAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAO,cAAP;;;AAiBA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAW,EAAX,CAA9B;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAW,EAAX,CAApC;AAEA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAtD;AAEA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC;AACvCqB,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,QAAQ,EAAE;AAH6B,GAAD,CAAxC;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAAC4B,aAAD,EAAgBC,gBAAhB,IAAoC7B,QAAQ,CAAW,EAAX,CAAlD;AACA,QAAM,CAAC8B,gBAAD,EAAmBC,mBAAnB,IAA0C/B,QAAQ,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAxD;AACA,QAAM,CAACgC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,EAAhD;AAEA,QAAMkC,OAAO,GAAGhC,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdoC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACnD,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA0BF,QAAQ,CAACG,MAAzC;AAEAvB,MAAAA,kBAAkB,CAAC,CAACqB,QAAD,EAAWC,SAAX,CAAD,CAAlB;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQAzC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,GAAG,CAACkC,GAAJ,CAAQ,OAAR,EAAiBC,IAAjB,CAAsBC,QAAQ,IAAI;AAChChC,MAAAA,QAAQ,CAACgC,QAAQ,CAACC,IAAV,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA9C,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACmC,GAAN,CAA4B,6DAA5B,EAA2FC,IAA3F,CAAgGC,QAAQ,IAAI;AAC1G,YAAME,UAAU,GAAGF,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBC,EAAE,IAAIA,EAAE,CAACC,KAA3B,CAAnB;AAEAnC,MAAAA,MAAM,CAACgC,UAAD,CAAN;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA/C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,UAAU,KAAK,GAAnB,EAAwB;AACtB;AACD;;AAEDjB,IAAAA,KAAK,CAACmC,GAAN,CAA+B,+DAA8DlB,UAAW,aAAxG,EACCmB,IADD,CACMC,QAAQ,IAAI;AAChB,YAAMM,SAAS,GAAGN,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBI,IAAI,IAAIA,IAAI,CAACC,IAA/B,CAAlB;AAEApC,MAAAA,SAAS,CAACkC,SAAD,CAAT;AACD,KALD;AAMD,GAXQ,EAWN,CAAC1B,UAAD,CAXM,CAAT;;AAaA,WAAS6B,cAAT,CAAwBC,KAAxB,EAA+D;AAC7D,UAAMN,EAAE,GAAGM,KAAK,CAACC,MAAN,CAAaC,KAAxB;AAEA/B,IAAAA,aAAa,CAACuB,EAAD,CAAb;AACD;;AAED,WAASS,gBAAT,CAA0BH,KAA1B,EAAiE;AAC/D,UAAMH,IAAI,GAAGG,KAAK,CAACC,MAAN,CAAaC,KAA1B;AAEA7B,IAAAA,eAAe,CAACwB,IAAD,CAAf;AACD;;AAED,WAASO,cAAT,CAAwBJ,KAAxB,EAAkD;AAChDvB,IAAAA,mBAAmB,CAAC,CAClBuB,KAAK,CAACK,MAAN,CAAaC,GADK,EAElBN,KAAK,CAACK,MAAN,CAAaE,GAFK,CAAD,CAAnB;AAID;;AAED,WAASC,iBAAT,CAA2BR,KAA3B,EAAiE;AAC/D,UAAM;AAAEjC,MAAAA,IAAF;AAAQmC,MAAAA;AAAR,QAAkBF,KAAK,CAACC,MAA9B;AAEAnC,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACE,IAAD,GAAQmC;AAAvB,KAAD,CAAX;AACD;;AAED,WAASO,gBAAT,CAA0BC,EAA1B,EAAsC;AACpC,UAAMC,eAAe,GAAGrC,aAAa,CAACsC,SAAd,CAAwBC,IAAI,IAAIA,IAAI,KAAKH,EAAzC,CAAxB;;AAEA,QAAIC,eAAe,IAAI,CAAvB,EAA0B;AACxB,YAAMG,aAAa,GAAGxC,aAAa,CAACyC,MAAd,CAAqBF,IAAI,IAAIA,IAAI,KAAKH,EAAtC,CAAtB;AAEAnC,MAAAA,gBAAgB,CAACuC,aAAD,CAAhB;AACD,KAJD,MAIO;AACLvC,MAAAA,gBAAgB,CAAC,CAAE,GAAGD,aAAL,EAAoBoC,EAApB,CAAD,CAAhB;AACD;AACF;;AAED,iBAAeM,YAAf,CAA4BhB,KAA5B,EAA8C;AAC5CA,IAAAA,KAAK,CAACiB,cAAN;AAEA,UAAM;AAAElD,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA4BJ,QAAlC;AACA,UAAM6B,EAAE,GAAGxB,UAAX;AACA,UAAM2B,IAAI,GAAGzB,YAAb;AACA,UAAM,CAACa,QAAD,EAAWC,SAAX,IAAwBV,gBAA9B;AACA,UAAMnB,KAAK,GAAGiB,aAAd;AAEA,UAAMiB,IAAI,GAAG,IAAI2B,QAAJ,EAAb;AAEA3B,IAAAA,IAAI,CAAC4B,MAAL,CAAY,MAAZ,EAAoBpD,IAApB;AACAwB,IAAAA,IAAI,CAAC4B,MAAL,CAAY,OAAZ,EAAqBnD,KAArB;AACAuB,IAAAA,IAAI,CAAC4B,MAAL,CAAY,UAAZ,EAAwBlD,QAAxB;AACAsB,IAAAA,IAAI,CAAC4B,MAAL,CAAY,IAAZ,EAAkBzB,EAAlB;AACAH,IAAAA,IAAI,CAAC4B,MAAL,CAAY,MAAZ,EAAoBtB,IAApB;AACAN,IAAAA,IAAI,CAAC4B,MAAL,CAAY,UAAZ,EAAwBlC,QAAxB;AACAM,IAAAA,IAAI,CAAC4B,MAAL,CAAY,WAAZ,EAAyBjC,SAAzB;AACAK,IAAAA,IAAI,CAAC4B,MAAL,CAAY,OAAZ,EAAqB9D,KAArB;AAEA,UAAMH,GAAG,CAACkE,IAAJ,CAAS,QAAT,EAAmB7B,IAAnB,CAAN;AAEA8B,IAAAA,KAAK,CAAC,yBAAD,CAAL;AAEAzC,IAAAA,OAAO,CAAC0C,IAAR,CAAa,GAAb;AACD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,GAAG,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,qBAHF,CADF,eAUE;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,qBADF,eAGE,oBAAC,QAAD;AAAU,IAAA,cAAc,EAAErC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,CALF,eAWE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,QAAQ,EAAE6B,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,eAqBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,QAAQ,EAAEA,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,QAAQ,EAAEA,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,CArBF,eA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,CADF,eAME,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE7C,eAAb;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAwC,IAAA,OAAO,EAAEyC,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,2EADd;AAEE,IAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE5B,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CANF,eAeE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,EAAE,EAAC,IAArB;AAA0B,IAAA,KAAK,EAAEN,UAAjC;AAA6C,IAAA,QAAQ,EAAE6B,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGxC,GAAG,CAACkC,GAAJ,CAAQC,EAAE,iBACT;AAAQ,IAAA,GAAG,EAAEA,EAAb;AAAiB,IAAA,KAAK,EAAEA,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,EAA7B,CADD,CAFH,CAFF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAC,MAAvB;AAA8B,IAAA,KAAK,EAAEtB,YAArC;AAAmD,IAAA,QAAQ,EAAE+B,gBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEG1C,MAAM,CAACgC,GAAP,CAAWI,IAAI,iBACd;AAAQ,IAAA,GAAG,EAAEA,IAAb;AAAmB,IAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,IAAjC,CADD,CAFH,CAFF,CAVF,CAfF,CA1CF,eA+EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,CADF,eAME;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxC,KAAK,CAACoC,GAAN,CAAUoB,IAAI,iBACb;AACE,IAAA,GAAG,EAAEA,IAAI,CAACH,EADZ;AAEE,IAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACI,IAAI,CAACH,EAAN,CAFjC;AAGE,IAAA,SAAS,EAAEpC,aAAa,CAACkD,QAAd,CAAuBX,IAAI,CAACH,EAA5B,IAAkC,UAAlC,GAA+C,EAH5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,GAAG,EAAEG,IAAI,CAACY,SAAf;AAA0B,IAAA,GAAG,EAAEZ,IAAI,CAACa,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOb,IAAI,CAACa,KAAZ,CANF,CADD,CADH,CANF,CA/EF,eAmGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAnGF,CAVF,CADF;AAoHD,CA5OD;;AA8OA,eAAetE,WAAf","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\nimport api from '../../services/api';\r\nimport Dropzone from '../../components/Dropzone';\r\n\r\nimport './styles.css';\r\nimport logo from '../../assets/logo.svg';\r\n\r\ninterface Item {\r\n  id: number;\r\n  title: string;\r\n  image_url: string;\r\n}\r\n\r\ninterface IBGEUFResponse {\r\n  sigla: string;\r\n}\r\n\r\ninterface IBGECityResponse {\r\n  nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [ufs, setUfs] = useState<string[]>([]);\r\n  const [cities, setCities] = useState<string[]>([]);\r\n\r\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    whatsapp: '',\r\n  });\r\n\r\n  const [selectedUf, setSelectedUf] = useState('0');\r\n  const [selectedCity, setSelectedCity] = useState('0');\r\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n  const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\r\n  const [selectedFile, setSelectedFile] = useState<File>();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      const { latitude, longitude } = position.coords;\r\n\r\n      setInitialPosition([latitude, longitude]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api.get('items').then(response => {\r\n      setItems(response.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n      const ufInitials = response.data.map(uf => uf.sigla);\r\n\r\n      setUfs(ufInitials);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedUf === '0') {\r\n      return;\r\n    }\r\n\r\n    axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n    .then(response => {\r\n      const cityNames = response.data.map(city => city.nome);\r\n\r\n      setCities(cityNames); \r\n    });\r\n  }, [selectedUf]);\r\n\r\n  function handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\r\n    const uf = event.target.value;\r\n\r\n    setSelectedUf(uf);\r\n  }\r\n\r\n  function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\r\n    const city = event.target.value;\r\n\r\n    setSelectedCity(city);\r\n  }\r\n\r\n  function handleMapClick(event: LeafletMouseEvent) {\r\n    setSelectedPosition([\r\n      event.latlng.lat,\r\n      event.latlng.lng\r\n    ]);\r\n  }\r\n\r\n  function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n    const { name, value } = event.target;\r\n\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n\r\n  function handleSelectItem(id: number) {\r\n    const alreadySelected = selectedItems.findIndex(item => item === id);\r\n\r\n    if (alreadySelected >= 0) {\r\n      const filteredItems = selectedItems.filter(item => item !== id);\r\n\r\n      setSelectedItems(filteredItems);\r\n    } else {\r\n      setSelectedItems([ ...selectedItems, id ]);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    const { name, email, whatsapp } = formData;\r\n    const uf = selectedUf;\r\n    const city = selectedCity;\r\n    const [latitude, longitude] = selectedPosition;\r\n    const items = selectedItems;\r\n\r\n    const data = new FormData();\r\n\r\n    data.append('name', name);\r\n    data.append('email', email);\r\n    data.append('whatsapp', whatsapp);\r\n    data.append('uf', uf);\r\n    data.append('city', city);\r\n    data.append('latitude', latitude);\r\n    data.append('longitude', longitude);\r\n    data.append('items', items);\r\n\r\n    await api.post('points', data);\r\n\r\n    alert('Ponto de coleta criado!');\r\n\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-create-point\">\r\n      <header>\r\n        <img src={logo} alt=\"Ecoleta\"/>\r\n\r\n        <Link to=\"/\">\r\n          <FiArrowLeft />\r\n          Voltar para Home\r\n        </Link>\r\n      </header>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Cadastro do <br/> ponto de coleta</h1>\r\n\r\n        <Dropzone onFileUploaded={setSelectedFile} />\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Dados</h2>\r\n          </legend>\r\n        </fieldset>\r\n\r\n        <div className=\"field\">\r\n          <label htmlFor=\"name\">Nome da entidade</label>\r\n          <input \r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field-group\">\r\n          <div className=\"field\">\r\n            <label htmlFor=\"email\">E-mail</label>\r\n            <input \r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n            <input \r\n              type=\"text\"\r\n              name=\"whatsapp\"\r\n              id=\"whatsapp\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Endereço</h2>\r\n            <span>Selecione o endereço no mapa</span>\r\n          </legend>\r\n\r\n          <Map center={initialPosition} zoom={15} onclick={handleMapClick}>\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            <Marker position={selectedPosition} />\r\n          </Map>\r\n\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"uf\">Estado (UF)</label>\r\n              <select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectUf}>\r\n                <option value=\"0\">Selecione uma UF</option>\r\n                {ufs.map(uf => (\r\n                  <option key={uf} value={uf}>{uf}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"city\">Cidade</label>\r\n              <select name=\"city\" id=\"city\" value={selectedCity} onChange={handleSelectCity}>\r\n                <option value=\"0\">Selecione uma cidade</option>\r\n                {cities.map(city => (\r\n                  <option key={city} value={city}>{city}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Itens de coleta</h2>\r\n            <span>Selecione um ou mais itens de coleta</span>\r\n          </legend>\r\n\r\n          <ul className=\"items-grid\">\r\n            {items.map(item => (\r\n              <li \r\n                key={item.id} \r\n                onClick={() => handleSelectItem(item.id)}\r\n                className={selectedItems.includes(item.id) ? 'selected' : ''}\r\n              >\r\n                <img src={item.image_url} alt={item.title} />\r\n                <span>{item.title}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </fieldset>\r\n\r\n        <button type=\"submit\">\r\n          Cadastrar ponto de coleta\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}